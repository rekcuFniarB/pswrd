#!/bin/sh

##  pswrd - simple password generating util.
##  Copyright (C) 2019  BrainFucker <retratserif@gmail.com>
##  
##  This program is free software: you can redistribute it and/or modify
##  it under the terms of the GNU General Public License as published by
##  the Free Software Foundation, either version 3 of the License, or
##  (at your option) any later version.
##  
##  This program is distributed in the hope that it will be useful,
##  but WITHOUT ANY WARRANTY; without even the implied warranty of
##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##  GNU General Public License for more details.

## print messages to stderr
errlog () {
    echo "$@" 1>&2
}

_NAME_="$(basename "$0")"

USAGE="$_NAME_ - Password generating util.

USAGE
    $_NAME_ 'string'
        Generate password for 'string'.
    $_NAME_
        Running with no args will prompt for passphrase.
    $_NAME_ -f 'file'
        Generate password for file.
    $_NAME_ -r [bytes]
        Print random string. If 'bytes' specified will use specified bytes of random data for input. Default: 16.
    $_NAME_ --help
        Show this help.

EXAMPLES
    $_NAME_ 'https://github.com/rekcuFniarB'
        Out: m2MOQDCpeH1U8YGP3rKW
    $_NAME_ 'Facebook sucks'
        Out: slM8y5DZpaXX5yqBbpy
    $_NAME_ -f 'picture.png'
        Out: dA9gZR290cDEkt4DczVfTA
    $_NAME_ -r
        Out: mbNJ0vgRQvgbrdvOXpCg
    $_NAME_ -r 32
        Out: GTILy9aUh87lz75VcwY1KJ9rpzTkwESP1X1tGsHsgI

COPYRIGHT
    $_NAME_ Copyright (C) 2019 BrainFucker
    This program comes with ABSOLUTELY NO WARRANTY.
    This is free software, and you are welcome to redistribute it
    under certain conditions."

if [ "$1" = --help ] || [ "$1" = -h ]; then
    errlog "$USAGE"
    exit
fi

## check for installed requirements
UTILS="md5sum head sed xxd base64"
for _util in $UTILS; do
    if [ -z "$(which "$_util")" ]; then
        errlog "Error: util '$_util' not found."
        exit 1
    fi
done

if [ -z "$1" ]; then
    ## Prompt if no args
    read -p 'Enter passphrase: ' _str
    if [ -z "$_str" ]; then
        errlog 'Error: input must be non empty.'
        exit 1
    fi
    echo -n "$_str" | md5sum | head -c30 | xxd -p -r | base64 | sed 's/\/\|\+\|=//g'
elif [ "$1" = -f ]; then
    # Using file as input
    if [ -z "$2" ]; then
        errlog 'No file supplied'
        errlog "$USAGE"
        exit 1
    fi
    
    if [ ! -f "$2" ]; then
        errlog "File '$2' not found."
        exit 1
    fi
    
    md5sum "$2" | head -c30 | xxd -p -r | base64 | sed 's/\/\|\+\|=//g'
elif [ "$1" = -r ]; then
    # Generating random string
    if [ -z "$2" ]; then
        BS=15
    elif [ "$2" -lt 3 ]; then
        BS=3
    else
        BS="$2"
    fi
    
    BS=$(( (BS/3)*3 ))
    
    if [ ! -c /dev/urandom ]; then
        errlog '/dev/urandom not found or not a character device.'
        exit 1
    fi
    
    head -c"$BS" /dev/urandom | base64 | sed 's/\/\|\+\|=//g'
else
    echo -n "$1" | md5sum | head -c30 | xxd -p -r | base64 | sed 's/\/\|\+\|=//g'
fi


